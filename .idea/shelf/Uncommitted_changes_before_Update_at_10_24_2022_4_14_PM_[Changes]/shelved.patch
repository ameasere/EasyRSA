Index: main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"\"\"\r\nMain Driver Code for EasyRSA\r\n\"\"\"\r\n\r\n# ///////////////////////////////////////////////////////////////\r\n#\r\n# BY: WANDERSON M.PIMENTA\r\n# PROJECT MADE WITH: Qt Designer and PySide6\r\n# V: 1.0.0\r\n#\r\n# This project can be used freely for all uses, as long as they maintain the\r\n# respective credits only in the Python scripts, any information in the visual\r\n# interface (GUI) can be modified without any implication.\r\n#\r\n# There are limitations on Qt licenses if you want to use your products\r\n# commercially, I recommend reading them on the official website:\r\n# https://doc.qt.io/qtforpython/licenses.html\r\n#\r\n# ///////////////////////////////////////////////////////////////\r\n# Made by Bartosz Rzepka (DevPanada), Leighton Brooks (enigmapr0ject)\r\n# 21477187 / 21472005\r\n# Theme by Zeno Rocha: https://zenorocha.com/\r\n# noinspection PyUnresolvedReferences\r\nimport json\r\n# noinspection PyUnresolvedReferences\r\nimport os\r\n# noinspection PyUnresolvedReferences\r\nimport platform\r\n# noinspection PyUnresolvedReferences\r\nimport sys\r\n# noinspection PyUnresolvedReferences\r\nimport webbrowser\r\n# noinspection PyUnresolvedReferences\r\nimport pyperclip\r\n# noinspection PyUnresolvedReferences\r\nimport rsa\r\nimport time\r\nimport ntpath\r\n# noinspection PyUnresolvedReferences\r\nfrom PySide6 import QtGui, QtWidgets, QtCore\r\n# noinspection PyUnresolvedReferences\r\nfrom PySide6.QtWidgets import QMainWindow\r\n# noinspection PyUnresolvedReferences\r\nfrom modules import *\r\n\r\n# warnings.filterwarnings('ignore')\r\n# os.environ['QT_DEBUG_PLUGINS'] = \"1\"\r\nos.environ[\"QT_FONT_DPI\"] = \"96\"  # FIX Problem for High DPI and Scale above 100%\r\ntitle = \"EasyRSA\"\r\ndescription = \"RSA made simple.\"\r\n\r\n\r\nclass MainWindow(QMainWindow):\r\n    \"\"\"\r\n    Dashboard\r\n    \"\"\"\r\n\r\n    def __init__(self):\r\n        QMainWindow.__init__(self)\r\n        self.ui = Ui_MainWindow()\r\n        self.ui.setupUi(self)\r\n        widgets = self.ui\r\n        self.rt: RepeatedTimer | None = None\r\n        self.model: QtWidgets.QFileSystemModel | None = None\r\n        self.dragPos = None\r\n        Settings.ENABLE_CUSTOM_TITLE_BAR = titleBarFlag\r\n        # APPLY TEXTS\r\n        self.setWindowTitle(title)\r\n        # widgets.titleRightInfo.setText(description)\r\n\r\n        # TOGGLE MENU\r\n        widgets.toggleButton.clicked.connect(lambda: UIFunctions.toggleMenu(self, True))\r\n\r\n        # SET UI DEFINITIONS\r\n        UIFunctions.uiDefinitions(self)\r\n\r\n        # QTableWidget PARAMETERS\r\n        widgets.tableWidget.horizontalHeader().setSectionResizeMode(QHeaderView.Stretch)\r\n\r\n        # BUTTONS CLICK\r\n        widgets.btn_home.clicked.connect(self.buttonClick)\r\n        widgets.btn_filespace.clicked.connect(self.buttonClick)\r\n        widgets.btn_passwords.clicked.connect(self.buttonClick)\r\n        widgets.btn_account.clicked.connect(self.buttonClick)\r\n        widgets.btn_exit.clicked.connect(self.buttonClick)\r\n        widgets.closeAppBtn.clicked.connect(self.buttonClick)\r\n        widgets.extraLabel.setText(\"Bartosz/Leighton\")\r\n\r\n        # EXTRA LEFT BOX\r\n        def openCloseLeftBox():\r\n            \"\"\"\r\n            Open/Close Extra Left Box\r\n            :return:\r\n            \"\"\"\r\n            UIFunctions.toggleLeftBox(self, True)\r\n\r\n        widgets.toggleLeftBox.clicked.connect(openCloseLeftBox)\r\n        widgets.extraCloseColumnBtn.clicked.connect(openCloseLeftBox)\r\n\r\n        # EXTRA RIGHT BOX\r\n        def openCloseRightBox():\r\n            \"\"\"\r\n            Open/Close Extra Right Box\r\n            :return:\r\n            \"\"\"\r\n            UIFunctions.toggleRightBox(self, True)\r\n\r\n        widgets.settingsTopBtn.clicked.connect(openCloseRightBox)\r\n        widgets.btn_logout.clicked.connect(self.buttonClick)\r\n        widgets.btn_help.clicked.connect(self.buttonClick)\r\n        widgets.btn_report.clicked.connect(self.buttonClick)\r\n        widgets.btn_credits.clicked.connect(self.buttonClick)\r\n        # SHOW APP\r\n        self.show()\r\n        widgets.btn_more.clicked.connect(self.buttonClick)\r\n\r\n        \"\"\"\r\n        themeFile = \"themes\\\\Hookmark.qss\"\r\n\r\n        # SET THEME AND HACKS\r\n        UIFunctions.theme(self, themeFile, True)\r\n        AppFunctions.setThemeHack(self)\r\n        \"\"\"\r\n        # Search for config file\r\n        stem = os.getcwd()\r\n        stem += \"\\\\config\\\\config.json\"\r\n        if not os.path.exists(stem):\r\n            # Create JSON object\r\n            data = {\"defaultSDLocation\": os.getcwd()}\r\n            with open(stem, \"w\") as f:\r\n                json.dump(data, f)\r\n                f.close()\r\n        else:\r\n            with open(stem, \"r\") as f:\r\n                self.configArray = json.load(f)\r\n                f.close()\r\n\r\n        # SET HOME PAGE AND SELECT MENU\r\n        widgets.stackedWidget.setCurrentWidget(widgets.home)\r\n        widgets.btn_home.setStyleSheet(UIFunctions.selectMenu(widgets.btn_home.styleSheet()))\r\n        # Home Screen\r\n        self.ui.credits.hide()\r\n        self.ui.openFilepathButton.clicked.connect(self.buttonClick)\r\n        # Main Page functionality\r\n\r\n        # Generate Key Pair\r\n        (self.__publicKey, self.__privateKey) = rsa.newkeys(2048)\r\n        self.ui.publicKeyDisplay.setPlainText(str(self.__publicKey))\r\n        self.ui.privateKeyDisplay.setPlainText(\"PrivateKey(***********)\")\r\n\r\n        # Private Key Checkbox Tick\r\n        self.ui.privateKeyCheckbox.stateChanged.connect(self.privateKeyCheckboxTick)\r\n\r\n        # Copy Private Key\r\n        self.ui.copyPrivateKeyButton.clicked.connect(self.buttonClick)\r\n\r\n        # Filespace Page functionality\r\n\r\n        # Multiview Checkbox Tick\r\n        self.ui.multiviewCheckbox.stateChanged.connect(self.buttonClick)\r\n        self.ui.openDirectory.clicked.connect(self.buttonClick)\r\n        self.ui.defaultLocation.clicked.connect(self.buttonClick)\r\n        self.ui.goToDefault.clicked.connect(self.buttonClick)\r\n\r\n\r\n        # Multiview disabled by default\r\n        self.ui.defaultLocation.hide()\r\n        self.ui.driveInfo.hide()\r\n        self.ui.driveInfoTitle.hide()\r\n        self.ui.fileBrowserTree.hide()\r\n        self.ui.goToDefault.hide()\r\n        self.ui.openDirectory.hide()\r\n        self.ui.parentDrive.hide()\r\n        self.ui.parentDriveSpace.hide()\r\n        self.ui.parentDriveTitle.hide()\r\n        self.ui.filepathBox.show()\r\n        self.ui.openFilepathButton.show()\r\n\r\n    def openFile(self, index):\r\n        item = index.model().filePath(self.ui.fileBrowserTree.currentIndex())\r\n        if platform.system() == \"Windows\":\r\n            os.startfile(item)\r\n        else:\r\n            import subprocess\r\n            opener = \"open\" if platform.system() == \"Darwin\" else \"xdg-open\"\r\n            cmd = opener + \" \" + item\r\n            subprocess.call([opener, item])\r\n\r\n    # BUTTON CLICK\r\n    def buttonClick(self):\r\n        \"\"\"\r\n        Button Click event handler\r\n        :return:\r\n        \"\"\"\r\n        # GET BUTTON CLICKED\r\n        btn = self.sender()\r\n        btnName = btn.objectName()\r\n        match btnName:\r\n            # SHOW NEW PAGE\r\n            case \"closeAppBtn\":\r\n                try:\r\n                    self.rt.stop()\r\n                    self.close()\r\n                    sys.exit(0)\r\n                except AttributeError:\r\n                    self.close()\r\n                    sys.exit(0)\r\n                except Exception as e:\r\n                    print(repr(e))\r\n            case \"btn_home\":\r\n                self.ui.titleLeftDescription.setText(\"Dashboard\")  # SET PAGE\r\n                self.ui.stackedWidget.setCurrentWidget(self.ui.home)  # RESET ANOTHERS BUTTONS SELECTED\r\n                UIFunctions.resetStyle(self, btnName)\r\n                btn.setStyleSheet(UIFunctions.selectMenu(btn.styleSheet()))  # SELECT MENU\r\n            case \"btn_filespace\":\r\n                self.ui.titleLeftDescription.setText(\"Filespace\")\r\n                self.ui.stackedWidget.setCurrentWidget(self.ui.filespace)\r\n                UIFunctions.resetStyle(self, btnName)\r\n                btn.setStyleSheet(UIFunctions.selectMenu(btn.styleSheet()))\r\n            case \"btn_passwords\":\r\n                self.ui.titleLeftDescription.setText(\"Page 3\")\r\n                self.ui.stackedWidget.setCurrentWidget(self.ui.page3)\r\n                UIFunctions.resetStyle(self, btnName)\r\n                btn.setStyleSheet(UIFunctions.selectMenu(btn.styleSheet()))\r\n            case \"btn_account\":\r\n                self.ui.titleLeftDescription.setText(\"Page 4\")\r\n                self.ui.stackedWidget.setCurrentWidget(self.ui.page4)\r\n                UIFunctions.resetStyle(self, btnName)\r\n                btn.setStyleSheet(UIFunctions.selectMenu(btn.styleSheet()))\r\n            case \"btn_exit\":\r\n                self.close()\r\n            case \"btn_logout\":\r\n                self.close()\r\n            case \"btn_credits\":\r\n                # Check if the credits are already showing\r\n                if self.ui.credits.isHidden():\r\n                    self.ui.credits.show()\r\n                else:\r\n                    self.ui.credits.hide()\r\n            case \"btn_help\":\r\n                webbrowser.get().open(\"https://github.com/enigmapr0ject/EasyRSA\")\r\n            case \"btn_report\":\r\n                webbrowser.get().open(\"https://github.com/enigmapr0ject/EasyRSA/issues\")\r\n            case \"btn_more\":\r\n                webbrowser.get().open(\"https://github.com/enigmapr0ject\")\r\n            case \"copyPrivateKeyButton\":\r\n                pyperclip.copy(self.ui.privateKeyDisplay.toPlainText())\r\n            case \"multiviewCheckbox\":\r\n                if self.ui.multiviewCheckbox.isChecked():\r\n                    self.ui.filepathBox.hide()\r\n                    self.ui.openFilepathButton.hide()\r\n                    self.ui.defaultLocation.show()\r\n                    self.ui.driveInfo.show()\r\n                    self.ui.driveInfoTitle.show()\r\n                    self.ui.fileBrowserTree.show()\r\n                    self.ui.goToDefault.show()\r\n                    self.ui.openDirectory.show()\r\n                    self.ui.parentDrive.show()\r\n                    self.ui.parentDriveSpace.show()\r\n                    self.ui.parentDriveTitle.show()\r\n                    self.model = QFileSystemModel()\r\n                    self.model.setRootPath(os.getcwd())\r\n                    self.ui.fileBrowserTree.setModel(self.model)  # Set the model\r\n                    if os.path.exists(self.configArray[\"defaultSDLocation\"]):\r\n                        self.ui.fileBrowserTree.setRootIndex(\r\n                            self.model.index(self.configArray['defaultSDLocation']) if self.configArray[\r\n                                                                                           'defaultSDLocation'] != \"\" else\r\n                            self.model.index(\r\n                                os.getcwd()))  # Set the first displaying directory\r\n                    # If directory in defaultSDLocation doesn't exist on the current machine, use current directory\r\n                    else:\r\n                        self.ui.fileBrowserTree.setRootIndex(self.model.index(os.getcwd()))\r\n                        self.model.index(os.getcwd())\r\n                    self.ui.fileBrowserTree.doubleClicked.connect(self.openFile)\r\n                    self.ui.fileBrowserTree.setAlternatingRowColors(False)  # Set the alternating row colors\r\n                    self.ui.fileBrowserTree.setSortingEnabled(True)  # Set the sorting\r\n                    self.ui.fileBrowserTree.setColumnWidth(0, 200)\r\n                    self.ui.fileBrowserTree.setColumnWidth(1, 150)\r\n                    self.ui.fileBrowserTree.setColumnWidth(2, 200)\r\n                    self.ui.fileBrowserTree.setColumnWidth(3, 200)\r\n                    # Set the context menu\r\n                    self.ui.fileBrowserTree.setContextMenuPolicy(QtCore.Qt.ContextMenuPolicy.CustomContextMenu)\r\n                    # (right clicking)\r\n                    self.ui.fileBrowserTree.customContextMenuRequested.connect(self.contextMenu)  # Custom right click\r\n                    # menu\r\n                    # self.ui.fileBrowserTree.doubleClicked.connect() # Double-clicking on a file has a special effect\r\n                    drivestats = DriveStatistics()\r\n                    self.ui.parentDrive.setText(\"Parent Drive: %s\" % drivestats.parentDrive)\r\n                    self.ui.parentDriveSpace.setValue(drivestats.parentDriveSpace)\r\n                    self.ui.driveInfo.setText(drivestats.driveInformation)\r\n                    if not self.rt:\r\n                        self.rt = RepeatedTimer(5, self.driveStatistics)\r\n                        self.rt.start()\r\n                    else:\r\n                        self.rt.start()\r\n                else:\r\n                    self.rt.stop()\r\n                    self.ui.defaultLocation.hide()\r\n                    self.ui.driveInfo.hide()\r\n                    self.ui.driveInfoTitle.hide()\r\n                    self.ui.fileBrowserTree.hide()\r\n                    self.ui.goToDefault.hide()\r\n                    self.ui.openDirectory.hide()\r\n                    self.ui.parentDrive.hide()\r\n                    self.ui.parentDriveSpace.hide()\r\n                    self.ui.parentDriveTitle.hide()\r\n                    self.ui.filepathBox.show()\r\n                    self.ui.openFilepathButton.show()\r\n\r\n            case \"openFilepathButton\":\r\n                self.filepath = QFileDialog.getOpenFileName(self, \"Select File\", os.getcwd(), \"All Files (*)\")[0]\r\n                self.ui.filepathBox.setText(self.filepath)\r\n                with open(self.filepath, 'rb') as f:\r\n                    # Read every 2048 bits\r\n                    pass\r\n\r\n\r\n\r\n    # Multiview drive statistics\r\n    def driveStatistics(self):\r\n        \"\"\"\r\n        Drive statistics for multiview, in realtime\r\n        \"\"\"\r\n        drivestats = DriveStatistics()\r\n        self.ui.parentDrive.setText(\"Parent Drive: %s\" % drivestats.parentDrive)\r\n        self.ui.parentDriveSpace.setValue(drivestats.parentDriveSpace)\r\n        self.ui.driveInfo.setText(drivestats.driveInformation)\r\n\r\n    # Private Key Checkbox Tick\r\n    def privateKeyCheckboxTick(self):\r\n        \"\"\"\r\n        Private Key Checkbox Tick event\r\n        :return:\r\n        \"\"\"\r\n        if self.ui.privateKeyCheckbox.isChecked():\r\n            self.ui.privateKeyDisplay.setPlainText(str(self.__privateKey))\r\n        else:\r\n            self.ui.privateKeyDisplay.setPlainText(\"PrivateKey(***********)\")\r\n\r\n    # Custom Context Menu\r\n    def contextMenu(self):\r\n        def renameFile():\r\n            # Check if the file is a directory\r\n            if self.ui.fileBrowserTree.currentIndex().isValid() and not self.model.isDir(self.ui.fileBrowserTree.currentIndex()):\r\n                index = self.ui.fileBrowserTree.currentIndex()\r\n                file_path = self.model.filePath(index)\r\n                self.rename = RenameFileWindow(file_path)\r\n                self.rename.show()\r\n            else:\r\n                # Set the window title\r\n                self.setWindowTitle(\"EasyRSA - No file selected\")\r\n        def deleteFile():\r\n            # Check if the file is a directory\r\n            if self.ui.fileBrowserTree.currentIndex().isValid() and not self.model.isDir(self.ui.fileBrowserTree.currentIndex()):\r\n                index = self.ui.fileBrowserTree.currentIndex()\r\n                file_path = self.model.filePath(index)\r\n                self.delete = DeleteConfirm(file_path)\r\n                self.delete.show()\r\n            else:\r\n                # Set the window title\r\n                self.setWindowTitle(\"EasyRSA - No file selected\")\r\n        def moveFile():\r\n            if self.ui.fileBrowserTree.currentIndex().isValid() and not self.model.isDir(self.ui.fileBrowserTree.currentIndex()):\r\n                index = self.ui.fileBrowserTree.currentIndex()\r\n                file_path = self.model.filePath(index)\r\n                self.move = MoveFile(file_path)\r\n                self.move.show()\r\n            else:\r\n                # Set the window title\r\n                self.setWindowTitle(\"EasyRSA - No file selected\")\r\n\r\n        \"\"\"\r\n        Custom Context Menu\r\n        :return:\r\n        \"\"\"\r\n        menu = QtWidgets.QMenu()\r\n        menu.setStyleSheet(\r\n            \"QMenu {background-color: rgb(33, 37, 43); font: 8pt \\\"Segoe UI\\\"; color: rgb(189, 147, 249);}\"\r\n            \"QMenu::item:selected {color: rgb(255, 255, 255); background-color: rgb(254, 120, 198); border-style: \"\r\n            \"solid; border-radius: 4px;} \"\r\n            \"QMenu::item {color: rgb(254, 120, 198); background-color: rgb(40, 44, 52; border-style: solid; \"\r\n            \"border-radius: 4px;}\")\r\n        renameAction = QAction(\"Rename File\")\r\n        deleteAction = QAction(\"Delete File\")\r\n        moveAction = QAction(\"Move File\")\r\n        encryptAction = QAction(\"Encrypt File\")\r\n        decryptAction = QAction(\"Decrypt File\")\r\n        encrypt = menu.addAction(encryptAction)\r\n        decrypt = menu.addAction(decryptAction)\r\n        rename = menu.addAction(renameAction)\r\n        move = menu.addAction(moveAction)\r\n        delete = menu.addAction(deleteAction)\r\n        # Connect context menu buttons to functions\r\n        renameAction.triggered.connect(renameFile)\r\n        deleteAction.triggered.connect(deleteFile)\r\n        moveAction.triggered.connect(moveFile)\r\n        cursor = QtGui.QCursor()\r\n        menu.exec_(cursor.pos())\r\n\r\n    # RESIZE EVENTS\r\n    def resizeEvent(self, event):\r\n        \"\"\"\r\n        Resize event\r\n        :param event:\r\n        :return:\r\n        \"\"\"\r\n        UIFunctions.resize_grips(self)\r\n\r\n    # MOUSE CLICK EVENTS\r\n    def mousePressEvent(self, event):\r\n        \"\"\"\r\n        Mouse press event\r\n        :param event:\r\n        :return:\r\n        \"\"\"\r\n        # SET DRAG POS WINDOW\r\n        self.dragPos = event.globalPos()\r\n\r\n\r\nclass RenameFileWindow(QMainWindow):\r\n    def __init__(self, filepath):\r\n        QMainWindow.__init__(self)\r\n        # SET AS GLOBAL WIDGETS\r\n        # ///////////////////////////////////////////////////////////////\r\n        self.ui = Ui_RenameWindow()\r\n        self.ui.setupUi(self)\r\n        self.filepath = filepath\r\n        self.newName: str | None = None\r\n        widgets = self.ui\r\n        # USE CUSTOM TITLE BAR | USE AS \"False\" FOR MAC OR LINUX\r\n        # ///////////////////////////////////////////////////////////////\r\n        match platform.system():\r\n            case \"Windows\":\r\n                titleBarFlag = True\r\n            case _:\r\n                titleBarFlag = False\r\n        Settings.ENABLE_CUSTOM_TITLE_BAR = titleBarFlag\r\n\r\n        # TOGGLE MENU\r\n        # ///////////////////////////////////////////////////////////////\r\n        # widgets.toggleButton.clicked.connect(lambda: UIFunctions.toggleMenu(self, True))\r\n        # SET UI DEFINITIONS\r\n        # ///////////////////////////////////////////////////////////////\r\n        UIFunctions.uiDefinitions(self)\r\n        # SHOW APP\r\n        # ///////////////////////////////////////////////////////////////\r\n        self.show()\r\n        widgets.confirmButton.clicked.connect(self.confirm)\r\n        widgets.cancelButton.clicked.connect(self.fade)\r\n        # SET CUSTOM THEME\r\n        # ///////////////////////////////////////////////////////////////\r\n        useCustomTheme = False\r\n        themeFile = \"themes\\py_dracula_light.qss\"\r\n\r\n        # SET THEME AND HACKS\r\n        if useCustomTheme:\r\n            # LOAD AND APPLY STYLE\r\n            UIFunctions.theme(self, themeFile, True)\r\n\r\n            # SET HACKS\r\n            AppFunctions.setThemeHack(self)\r\n\r\n        # SET HOME PAGE AND SELECT MENU\r\n        # ///////////////////////////////////////////////////////////////\r\n        widgets.stackedWidget.setCurrentWidget(widgets.home)\r\n        # widgets.btn_home.setStyleSheet(UIFunctions.selectMenu(widgets.btn_home.styleSheet()))\r\n\r\n    def confirm(self):\r\n        \"\"\"\r\n        The function takes the filepath of the file to be renamed and renames it to the new name.\r\n\r\n        \"\"\"\r\n        self.newName = self.ui.fileNameBox.text()\r\n\r\n        def path_leaf(path):  # Splits path names into tails and heads\r\n            head, tail = ntpath.split(path)\r\n            return head\r\n\r\n        stem = path_leaf(self.filepath)\r\n        if systemLabel == \"Darwin\" or systemLabel == \"Linux\":\r\n            self.newName = stem + \"/\" + self.newName\r\n        else:\r\n            self.newName = stem + \"\\\\\" + self.newName\r\n        if len(self.newName) < 1:\r\n            self.ui.responseTitle.setText(\"Blank file names don't exist!\")\r\n        else:\r\n            try:\r\n                os.rename(self.filepath, self.newName)\r\n                self.fade()\r\n            except Exception as e:\r\n                self.ui.responseTitle.setText(\"Error: %s\" % e)\r\n\r\n    def fade(self):\r\n        for i in range(10):\r\n            i = i / 10\r\n            self.setWindowOpacity(1 - i)\r\n            time.sleep(0.02)\r\n        self.close()\r\n\r\n    # RESIZE EVENTS\r\n    # ///////////////////////////////////////////////////////////////\r\n    def resizeEvent(self, event):\r\n        # Update Size Grips\r\n        UIFunctions.resize_grips(self)\r\n\r\n    # MOUSE CLICK EVENTS\r\n    # ///////////////////////////////////////////////////////////////\r\n    def mousePressEvent(self, event):\r\n        # SET DRAG POS WINDOW\r\n        self.dragPos = event.globalPos()\r\n\r\n    def exitHandler(self):\r\n        self.fade()\r\n\r\n\r\nclass DeleteConfirm(QMainWindow):\r\n    def __init__(self, index):\r\n        QMainWindow.__init__(self)\r\n        # SET AS GLOBAL WIDGETS\r\n        # ///////////////////////////////////////////////////////////////\r\n        self.ui = Ui_ConfirmDeleteWindow()\r\n        self.ui.setupUi(self)\r\n        self.index = index\r\n        widgets = self.ui\r\n        # USE CUSTOM TITLE BAR | USE AS \"False\" FOR MAC OR LINUX\r\n        # ///////////////////////////////////////////////////////////////\r\n        Settings.ENABLE_CUSTOM_TITLE_BAR = titleBarFlag\r\n\r\n        # TOGGLE MENU\r\n        # ///////////////////////////////////////////////////////////////\r\n        # widgets.toggleButton.clicked.connect(lambda: UIFunctions.toggleMenu(self, True))\r\n        # SET UI DEFINITIONS\r\n        # ///////////////////////////////////////////////////////////////\r\n        UIFunctions.uiDefinitions(self)\r\n        # SHOW APP\r\n        # ///////////////////////////////////////////////////////////////\r\n        self.show()\r\n        widgets.yesButton.clicked.connect(self.yes)\r\n        widgets.noButton.clicked.connect(self.fade)\r\n        # SET CUSTOM THEME\r\n        # ///////////////////////////////////////////////////////////////\r\n        useCustomTheme = False\r\n        themeFile = \"themes\\py_dracula_light.qss\"\r\n\r\n        # SET THEME AND HACKS\r\n        if useCustomTheme:\r\n            # LOAD AND APPLY STYLE\r\n            UIFunctions.theme(self, themeFile, True)\r\n\r\n            # SET HACKS\r\n            AppFunctions.setThemeHack(self)\r\n\r\n        # SET HOME PAGE AND SELECT MENU\r\n        # ///////////////////////////////////////////////////////////////\r\n        widgets.stackedWidget.setCurrentWidget(widgets.home)\r\n        # widgets.btn_home.setStyleSheet(UIFunctions.selectMenu(widgets.btn_home.styleSheet()))\r\n\r\n    def yes(self):\r\n        try:\r\n            os.remove(self.index)\r\n        except Exception as e:\r\n            self.close()\r\n        self.fade()\r\n\r\n    def fade(self):\r\n        for i in range(10):\r\n            i = i / 10\r\n            self.setWindowOpacity(1 - i)\r\n            time.sleep(0.02)\r\n        self.close()\r\n\r\n    # RESIZE EVENTS\r\n    # ///////////////////////////////////////////////////////////////\r\n    def resizeEvent(self, event):\r\n        # Update Size Grips\r\n        UIFunctions.resize_grips(self)\r\n\r\n    # MOUSE CLICK EVENTS\r\n    # ///////////////////////////////////////////////////////////////\r\n    def mousePressEvent(self, event):\r\n        # SET DRAG POS WINDOW\r\n        self.dragPos = event.globalPos()\r\n\r\n    def exitHandler(self):\r\n        self.fade()\r\n\r\n\r\nclass MoveFile(QMainWindow):\r\n    def __init__(self, index):\r\n        QMainWindow.__init__(self)\r\n        # SET AS GLOBAL WIDGETS\r\n        # ///////////////////////////////////////////////////////////////\r\n        self.ui = Ui_MoveWindow()\r\n        self.ui.setupUi(self)\r\n        self.index = index\r\n        self.filepath = None\r\n        widgets = self.ui\r\n        # USE CUSTOM TITLE BAR | USE AS \"False\" FOR MAC OR LINUX\r\n        # ///////////////////////////////////////////////////////////////\r\n        Settings.ENABLE_CUSTOM_TITLE_BAR = titleBarFlag\r\n\r\n        # TOGGLE MENU\r\n        # ///////////////////////////////////////////////////////////////\r\n        # widgets.toggleButton.clicked.connect(lambda: UIFunctions.toggleMenu(self, True))\r\n        # SET UI DEFINITIONS\r\n        # ///////////////////////////////////////////////////////////////\r\n        UIFunctions.uiDefinitions(self)\r\n        # SHOW APP\r\n        # ///////////////////////////////////////////////////////////////\r\n        self.show()\r\n        widgets.confirmButton.clicked.connect(self.yes)\r\n        widgets.cancelButton.clicked.connect(self.fade)\r\n        widgets.openFilepathButton.clicked.connect(self.openFile)\r\n        # SET CUSTOM THEME\r\n        # ///////////////////////////////////////////////////////////////\r\n        useCustomTheme = False\r\n        themeFile = \"themes\\py_dracula_light.qss\"\r\n\r\n        # SET THEME AND HACKS\r\n        if useCustomTheme:\r\n            # LOAD AND APPLY STYLE\r\n            UIFunctions.theme(self, themeFile, True)\r\n\r\n            # SET HACKS\r\n            AppFunctions.setThemeHack(self)\r\n\r\n        # SET HOME PAGE AND SELECT MENU\r\n        # ///////////////////////////////////////////////////////////////\r\n        widgets.stackedWidget.setCurrentWidget(widgets.home)\r\n        # widgets.btn_home.setStyleSheet(UIFunctions.selectMenu(widgets.btn_home.styleSheet()))\r\n\r\n    def yes(self):\r\n        pass\r\n    def openFile(self):\r\n        # Open file selection window\r\n        self.filepath = QFileDialog.getExistingDirectory(self, \"Select Directory\")\r\n        self.ui.fileNameBox.setText(self.filepath)\r\n    def fade(self):\r\n        for i in range(10):\r\n            i = i / 10\r\n            self.setWindowOpacity(1 - i)\r\n            time.sleep(0.02)\r\n        self.close()\r\n\r\n    # RESIZE EVENTS\r\n    # ///////////////////////////////////////////////////////////////\r\n    def resizeEvent(self, event):\r\n        # Update Size Grips\r\n        UIFunctions.resize_grips(self)\r\n\r\n    # MOUSE CLICK EVENTS\r\n    # ///////////////////////////////////////////////////////////////\r\n    def mousePressEvent(self, event):\r\n        # SET DRAG POS WINDOW\r\n        self.dragPos = event.globalPos()\r\n\r\n    def exitHandler(self):\r\n        self.fade()\r\n\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    match platform.system():  # Check the OS\r\n        case \"Windows\":  # If Windows\r\n            import ctypes  # Windows exclusive library\r\n\r\n            myappid = 'theenigmaproject.crypto.easyRSA.001'  # arbitrary string, can be anything\r\n            ctypes.windll.shell32.SetCurrentProcessExplicitAppUserModelID(myappid)  # Set the AppID. Needed for\r\n            # taskbar icon and window icons to work.\r\n            titleBarFlag = True  # Variable holding the value for if we have a custom titlebar or not. This is broken\r\n            # on any other OS.\r\n        case other:\r\n            titleBarFlag = False\r\n    app = QApplication(sys.argv)\r\n    window = MainWindow()\r\n    sys.exit(app.exec())\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main.py b/main.py
--- a/main.py	(revision 3b6d398d00317be102ea3bd689312ea9e6a248ea)
+++ b/main.py	(date 1666624083302)
@@ -144,7 +144,7 @@
         # Main Page functionality
 
         # Generate Key Pair
-        (self.__publicKey, self.__privateKey) = rsa.newkeys(2048)
+        (self.__publicKey, self.__privateKey) = rsa.newkeys(512)
         self.ui.publicKeyDisplay.setPlainText(str(self.__publicKey))
         self.ui.privateKeyDisplay.setPlainText("PrivateKey(***********)")
 
@@ -274,6 +274,8 @@
                     self.ui.fileBrowserTree.doubleClicked.connect(self.openFile)
                     self.ui.fileBrowserTree.setAlternatingRowColors(False)  # Set the alternating row colors
                     self.ui.fileBrowserTree.setSortingEnabled(True)  # Set the sorting
+                    # Default sort by name
+                    self.ui.fileBrowserTree.sortByColumn(0, Qt.AscendingOrder)
                     self.ui.fileBrowserTree.setColumnWidth(0, 200)
                     self.ui.fileBrowserTree.setColumnWidth(1, 150)
                     self.ui.fileBrowserTree.setColumnWidth(2, 200)
@@ -306,14 +308,17 @@
                     self.ui.parentDriveTitle.hide()
                     self.ui.filepathBox.show()
                     self.ui.openFilepathButton.show()
-
             case "openFilepathButton":
                 self.filepath = QFileDialog.getOpenFileName(self, "Select File", os.getcwd(), "All Files (*)")[0]
                 self.ui.filepathBox.setText(self.filepath)
                 with open(self.filepath, 'rb') as f:
-                    # Read every 2048 bits
-                    pass
-
+                    # Read file in 2048 bit chunks, encrypt them and print them
+                    while True:
+                        chunk = f.read(round((512/8)-11))
+                        if len(chunk) == 0:
+                            break
+                        print(rsa.encrypt(chunk, self.__publicKey))
+                    f.close()
 
 
     # Multiview drive statistics
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"27758b9c-daa3-47af-9d5a-9a426b5867f6\" name=\"Changes\" comment=\"Added partial moving file functionality\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2GJKYMPXUaexvaZkBVxMonZSXgX\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"ASKED_ADD_EXTERNAL_FILES\": \"true\",\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"WebServerToolWindowFactoryState\": \"false\",\r\n    \"last_opened_file_path\": \"C:/Users/light/OneDrive/Desktop/EasyRSA\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"settings.editor.selected.configurable\": \"vcs.Git\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\light\\OneDrive\\Desktop\\EasyRSA\\modules\" />\r\n      <recent name=\"C:\\Users\\light\\OneDrive\\Desktop\\EasyRSA\" />\r\n      <recent name=\"C:\\Users\\Leigh\\Desktop\\EasyRSA\\modules\" />\r\n      <recent name=\"C:\\Users\\Leigh\\Desktop\\EasyRSA\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Python.main (1)\">\r\n    <configuration name=\"RenameWindowCTRL (1)\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"EasyRSA\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/RenameWindowCTRL.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"RenameWindowCTRL\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"EasyRSA\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/modules\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"C:\\Users\\light\\OneDrive\\Desktop\\EasyRSA\\RenameWindowCTRL.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"main (1)\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"EasyRSA\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/main.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"EasyRSA\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/src\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"C:\\Users\\Leigh\\Desktop\\EasyRSA\\main.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"ui_functions\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"EasyRSA\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/modules\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/modules/ui_functions.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Python.main (1)\" />\r\n        <item itemvalue=\"Python.RenameWindowCTRL (1)\" />\r\n        <item itemvalue=\"Python.RenameWindowCTRL\" />\r\n        <item itemvalue=\"Python.main\" />\r\n        <item itemvalue=\"Python.ui_functions\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"27758b9c-daa3-47af-9d5a-9a426b5867f6\" name=\"Changes\" comment=\"\" />\r\n      <created>1666101292253</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1666101292253</updated>\r\n      <workItem from=\"1666117615288\" duration=\"6771000\" />\r\n      <workItem from=\"1666128063775\" duration=\"134000\" />\r\n      <workItem from=\"1666181399285\" duration=\"13571000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Updated config.json checks and initial creation.\">\r\n      <created>1666609646218</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1666609646218</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Fixed error with self.configArray\">\r\n      <created>1666609806461</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1666609806461</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Added group number\">\r\n      <created>1666614875623</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1666614875623</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Fixed issue with RT thread being overwritten instead of being stopped/started every time.\">\r\n      <created>1666615091414</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1666615091414</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Added context menu functions (not complete)\">\r\n      <created>1666619395694</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1666619395694</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Added context menu functions (not complete)\">\r\n      <created>1666620402492</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1666620402492</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Added partial moving file functionality\">\r\n      <created>1666621968759</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1666621968759</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"8\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Updated config.json checks and initial creation.\" />\r\n    <MESSAGE value=\"Fixed error with self.configArray\" />\r\n    <MESSAGE value=\"Added group number\" />\r\n    <MESSAGE value=\"Fixed issue with RT thread being overwritten instead of being stopped/started every time.\" />\r\n    <MESSAGE value=\"Added context menu functions (not complete)\" />\r\n    <MESSAGE value=\"Added partial moving file functionality\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Added partial moving file functionality\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 3b6d398d00317be102ea3bd689312ea9e6a248ea)
+++ b/.idea/workspace.xml	(date 1666623893610)
@@ -4,7 +4,10 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="27758b9c-daa3-47af-9d5a-9a426b5867f6" name="Changes" comment="Added partial moving file functionality" />
+    <list default="true" id="27758b9c-daa3-47af-9d5a-9a426b5867f6" name="Changes" comment="Fixed config clashing">
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/main.py" afterDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -28,21 +31,21 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "ASKED_ADD_EXTERNAL_FILES": "true",
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
-    "WebServerToolWindowFactoryState": "false",
-    "last_opened_file_path": "C:/Users/light/OneDrive/Desktop/EasyRSA",
-    "node.js.detected.package.eslint": "true",
-    "node.js.detected.package.tslint": "true",
-    "node.js.selected.package.eslint": "(autodetect)",
-    "node.js.selected.package.tslint": "(autodetect)",
-    "settings.editor.selected.configurable": "vcs.Git"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
+    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
+    &quot;last_opened_file_path&quot;: &quot;C:/Users/light/OneDrive/Desktop/EasyRSA&quot;,
+    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
+    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
+    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
+    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;vcs.Git&quot;
   }
-}]]></component>
+}</component>
   <component name="RecentsManager">
     <key name="MoveFile.RECENT_KEYS">
       <recent name="C:\Users\light\OneDrive\Desktop\EasyRSA\modules" />
@@ -231,7 +234,21 @@
       <option name="project" value="LOCAL" />
       <updated>1666621968759</updated>
     </task>
-    <option name="localTasksCounter" value="8" />
+    <task id="LOCAL-00008" summary="Fixed config clashing">
+      <created>1666622267970</created>
+      <option name="number" value="00008" />
+      <option name="presentableId" value="LOCAL-00008" />
+      <option name="project" value="LOCAL" />
+      <updated>1666622267970</updated>
+    </task>
+    <task id="LOCAL-00009" summary="Fixed config clashing">
+      <created>1666622328074</created>
+      <option name="number" value="00009" />
+      <option name="presentableId" value="LOCAL-00009" />
+      <option name="project" value="LOCAL" />
+      <updated>1666622328074</updated>
+    </task>
+    <option name="localTasksCounter" value="10" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -255,6 +272,7 @@
     <MESSAGE value="Fixed issue with RT thread being overwritten instead of being stopped/started every time." />
     <MESSAGE value="Added context menu functions (not complete)" />
     <MESSAGE value="Added partial moving file functionality" />
-    <option name="LAST_COMMIT_MESSAGE" value="Added partial moving file functionality" />
+    <MESSAGE value="Fixed config clashing" />
+    <option name="LAST_COMMIT_MESSAGE" value="Fixed config clashing" />
   </component>
 </project>
\ No newline at end of file
